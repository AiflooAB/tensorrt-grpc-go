// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/core/request_status.proto

package nvidia_inferenceserver

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//@@
//@@.. cpp:enum:: RequestStatusCode
//@@
//@@   Status codes returned for inference server requests. The
//@@   :cpp:enumerator:`RequestStatusCode::SUCCESS` status code indicates
//@@   not error, all other codes indicate an error.
//@@
type RequestStatusCode int32

const (
	//@@  .. cpp:enumerator:: RequestStatusCode::INVALID = 0
	//@@
	//@@     Invalid status. Used internally but should not be returned as
	//@@     part of a :cpp:var:`RequestStatus`.
	//@@
	RequestStatusCode_INVALID RequestStatusCode = 0
	//@@  .. cpp:enumerator:: RequestStatusCode::SUCCESS = 1
	//@@
	//@@     Error code indicating success.
	//@@
	RequestStatusCode_SUCCESS RequestStatusCode = 1
	//@@  .. cpp:enumerator:: RequestStatusCode::UNKNOWN = 2
	//@@
	//@@     Error code indicating an unknown failure.
	//@@
	RequestStatusCode_UNKNOWN RequestStatusCode = 2
	//@@  .. cpp:enumerator:: RequestStatusCode::INTERNAL = 3
	//@@
	//@@     Error code indicating an internal failure.
	//@@
	RequestStatusCode_INTERNAL RequestStatusCode = 3
	//@@  .. cpp:enumerator:: RequestStatusCode::NOT_FOUND = 4
	//@@
	//@@     Error code indicating a resource or request was not found.
	//@@
	RequestStatusCode_NOT_FOUND RequestStatusCode = 4
	//@@  .. cpp:enumerator:: RequestStatusCode::INVALID_ARG = 5
	//@@
	//@@     Error code indicating a failure caused by an unknown argument or
	//@@     value.
	//@@
	RequestStatusCode_INVALID_ARG RequestStatusCode = 5
	//@@  .. cpp:enumerator:: RequestStatusCode::UNAVAILABLE = 6
	//@@
	//@@     Error code indicating an unavailable resource.
	//@@
	RequestStatusCode_UNAVAILABLE RequestStatusCode = 6
	//@@  .. cpp:enumerator:: RequestStatusCode::UNSUPPORTED = 7
	//@@
	//@@     Error code indicating an unsupported request or operation.
	//@@
	RequestStatusCode_UNSUPPORTED RequestStatusCode = 7
	//@@  .. cpp:enumerator:: RequestStatusCode::ALREADY_EXISTS = 8
	//@@
	//@@     Error code indicating an already existing resource.
	//@@
	RequestStatusCode_ALREADY_EXISTS RequestStatusCode = 8
)

var RequestStatusCode_name = map[int32]string{
	0: "INVALID",
	1: "SUCCESS",
	2: "UNKNOWN",
	3: "INTERNAL",
	4: "NOT_FOUND",
	5: "INVALID_ARG",
	6: "UNAVAILABLE",
	7: "UNSUPPORTED",
	8: "ALREADY_EXISTS",
}

var RequestStatusCode_value = map[string]int32{
	"INVALID":        0,
	"SUCCESS":        1,
	"UNKNOWN":        2,
	"INTERNAL":       3,
	"NOT_FOUND":      4,
	"INVALID_ARG":    5,
	"UNAVAILABLE":    6,
	"UNSUPPORTED":    7,
	"ALREADY_EXISTS": 8,
}

func (x RequestStatusCode) String() string {
	return proto.EnumName(RequestStatusCode_name, int32(x))
}

func (RequestStatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_22c48c68d9be24ee, []int{0}
}

//@@
//@@.. cpp:var:: message RequestStatus
//@@
//@@   Status returned for all inference server requests. The
//@@   RequestStatus provides a :cpp:enum:`RequestStatusCode`, an
//@@   optional status message, and server and request IDs.
//@@
type RequestStatus struct {
	//@@  .. cpp:var:: RequestStatusCode code
	//@@
	//@@     The status code.
	//@@
	Code RequestStatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=nvidia.inferenceserver.RequestStatusCode" json:"code,omitempty"`
	//@@  .. cpp:var:: string msg
	//@@
	//@@     The optional status message.
	//@@
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	//@@  .. cpp:var:: string server_id
	//@@
	//@@     The identifying string for the server that is returning
	//@@     this status.
	//@@
	ServerId string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	//@@  .. cpp:var:: string request_id
	//@@
	//@@     Unique identifier for the request. Value 0 (zero) indicates
	//@@     the request ID is not known.
	//@@
	RequestId            uint64   `protobuf:"varint,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestStatus) Reset()         { *m = RequestStatus{} }
func (m *RequestStatus) String() string { return proto.CompactTextString(m) }
func (*RequestStatus) ProtoMessage()    {}
func (*RequestStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_22c48c68d9be24ee, []int{0}
}

func (m *RequestStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestStatus.Unmarshal(m, b)
}
func (m *RequestStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestStatus.Marshal(b, m, deterministic)
}
func (m *RequestStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestStatus.Merge(m, src)
}
func (m *RequestStatus) XXX_Size() int {
	return xxx_messageInfo_RequestStatus.Size(m)
}
func (m *RequestStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestStatus.DiscardUnknown(m)
}

var xxx_messageInfo_RequestStatus proto.InternalMessageInfo

func (m *RequestStatus) GetCode() RequestStatusCode {
	if m != nil {
		return m.Code
	}
	return RequestStatusCode_INVALID
}

func (m *RequestStatus) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *RequestStatus) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *RequestStatus) GetRequestId() uint64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func init() {
	proto.RegisterEnum("nvidia.inferenceserver.RequestStatusCode", RequestStatusCode_name, RequestStatusCode_value)
	proto.RegisterType((*RequestStatus)(nil), "nvidia.inferenceserver.RequestStatus")
}

func init() { proto.RegisterFile("src/core/request_status.proto", fileDescriptor_22c48c68d9be24ee) }

var fileDescriptor_22c48c68d9be24ee = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x31, 0x4f, 0xf3, 0x30,
	0x10, 0x86, 0x3f, 0xb7, 0xf9, 0xda, 0xe6, 0x4a, 0x8b, 0xf1, 0x80, 0x22, 0xa1, 0x4a, 0x15, 0x53,
	0x61, 0x48, 0x25, 0x98, 0x19, 0x4c, 0x13, 0x90, 0x45, 0xe4, 0x54, 0x76, 0x52, 0x60, 0x8a, 0x4a,
	0x6c, 0x50, 0x06, 0x1a, 0xb0, 0xd3, 0xfe, 0x1a, 0xc4, 0x6f, 0x45, 0x49, 0xca, 0x80, 0x60, 0xbb,
	0xf7, 0xd1, 0x3d, 0x77, 0xa7, 0x83, 0x89, 0x35, 0xf9, 0x3c, 0x2f, 0x8d, 0x9e, 0x1b, 0xfd, 0xbe,
	0xd5, 0xb6, 0xca, 0x6c, 0xb5, 0xae, 0xb6, 0xd6, 0x7f, 0x33, 0x65, 0x55, 0x92, 0xe3, 0xcd, 0xae,
	0x50, 0xc5, 0xda, 0x2f, 0x36, 0xcf, 0xda, 0xe8, 0x4d, 0xae, 0xad, 0x36, 0x3b, 0x6d, 0x4e, 0x3f,
	0x10, 0x8c, 0x44, 0x2b, 0xc8, 0xa6, 0x9f, 0x5c, 0x81, 0x93, 0x97, 0x4a, 0x7b, 0x68, 0x8a, 0x66,
	0xe3, 0x8b, 0x33, 0xff, 0x6f, 0xd1, 0xff, 0x21, 0x2d, 0x4a, 0xa5, 0x45, 0xa3, 0x11, 0x0c, 0xdd,
	0x57, 0xfb, 0xe2, 0x75, 0xa6, 0x68, 0xe6, 0x8a, 0xba, 0x24, 0x27, 0xe0, 0xb6, 0x4e, 0x56, 0x28,
	0xaf, 0xdb, 0xf0, 0x41, 0x0b, 0x98, 0x22, 0x13, 0x80, 0xef, 0x7b, 0x0b, 0xe5, 0x39, 0x53, 0x34,
	0x73, 0x84, 0xbb, 0x27, 0x4c, 0x9d, 0x7f, 0x22, 0x38, 0xfa, 0xb5, 0x89, 0x0c, 0xa1, 0xcf, 0xf8,
	0x8a, 0x46, 0x2c, 0xc0, 0xff, 0xea, 0x20, 0xd3, 0xc5, 0x22, 0x94, 0x12, 0xa3, 0x3a, 0xa4, 0xfc,
	0x8e, 0xc7, 0xf7, 0x1c, 0x77, 0xc8, 0x01, 0x0c, 0x18, 0x4f, 0x42, 0xc1, 0x69, 0x84, 0xbb, 0x64,
	0x04, 0x2e, 0x8f, 0x93, 0xec, 0x26, 0x4e, 0x79, 0x80, 0x1d, 0x72, 0x08, 0xc3, 0xfd, 0x8c, 0x8c,
	0x8a, 0x5b, 0xfc, 0xbf, 0x06, 0x29, 0xa7, 0x2b, 0xca, 0x22, 0x7a, 0x1d, 0x85, 0xb8, 0xd7, 0x02,
	0x99, 0x2e, 0x97, 0xb1, 0x48, 0xc2, 0x00, 0xf7, 0x09, 0x81, 0x31, 0x8d, 0x44, 0x48, 0x83, 0xc7,
	0x2c, 0x7c, 0x60, 0x32, 0x91, 0x78, 0xf0, 0xd4, 0x6b, 0xde, 0x7b, 0xf9, 0x15, 0x00, 0x00, 0xff,
	0xff, 0xc0, 0xb3, 0xbb, 0x84, 0x7f, 0x01, 0x00, 0x00,
}
